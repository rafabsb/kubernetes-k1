---

# - name: Template http-proxy.conf
#   template:
#     src: http-proxy.conf
#     dest: '{{dockerSystemdDir}}/http-proxy.conf'
#     owner: root
#     mode: 0644
#     force: yes
#   become: true
#   notify:
#     - restart docker

# - name: Template https-proxy.conf
#   template:
#     src: https-proxy.conf
#     dest: '{{dockerSystemdDir}}/https-proxy.conf'
#     owner: root
#     mode: 0644
#     force: yes
#   become: true
#   notify:
#     - restart docker

# - name: Template docker.service.j2
#   template:
#     src: docker.service.j2
#     dest: '/etc/systemd/system/multi-user.target.wants/docker.service'
#     owner: root
#     mode: 0644
#     force: yes
#   become: true
#   notify:
#     - restart docker

- name: create docker setup dirs.
  file:
    path: "{{ item }}"
    state: directory
    mode: 0755
  with_items:
    - '{{dockerConfDir}}'
    # - '{{dockerSystemdDir}}'
  become: true

- name: Template daemon.json
  template:
    src: daemon.json.j2
    dest: '{{ dockerConfDir }}/daemon.json'
    force: yes
  become: true
  # notify:
  #   - restart docker

- name: Copy docker binaries to remote VMs
  copy:
    src: '{{ item }}'
    dest: /tmp/{{ item }}
    mode: 0644
  with_items:
    - docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm
    - docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm

- name: Install Docker from binaries.
  package:
    name: '/tmp/{{ item }}'
    state: present
    update_cache: yes
  with_items:
    - docker-ce-selinux-17.03.2.ce-1.el7.centos.noarch.rpm
    - docker-ce-17.03.2.ce-1.el7.centos.x86_64.rpm
  become: true

- name: Start docker service
  systemd:
    name: docker
    state: started
    daemon_reload: yes
  become: true
